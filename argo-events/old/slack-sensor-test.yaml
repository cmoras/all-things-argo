metadata:
  name: slack
  namespace: argo-events
  uid: 7a122952-b6fd-4dfa-b5ed-636b18ca9b41
  resourceVersion: '80079846'
  generation: 5
  creationTimestamp: '2023-04-20T21:34:37Z'
  finalizers:
    - sensor-controller
  managedFields:
    - manager: argo
      operation: Update
      apiVersion: argoproj.io/v1alpha1
      time: '2023-04-20T21:34:37Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          .: {}
          f:dependencies: {}
          f:template:
            .: {}
            f:serviceAccountName: {}
          f:triggers: {}
    - manager: argo-events
      operation: Update
      apiVersion: argoproj.io/v1alpha1
      time: '2023-04-20T21:34:37Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:finalizers:
            .: {}
            v:"sensor-controller": {}
    - manager: argo-events
      operation: Update
      apiVersion: argoproj.io/v1alpha1
      time: '2023-04-20T21:34:37Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          .: {}
          f:conditions: {}
      subresource: status
spec:
  dependencies:
    - name: test
      eventSourceName: slack
      eventName: example-insecure
      filters:
        data:
          - path: body.message
            type: string
            value:
              - clear s3
  triggers:
    - template:
        name: slack-workflow
        k8s:
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: slack-
              spec:
                entrypoint: clear-s3
                serviceAccountName: operate-workflow-sa
                templates:
                  - container:
                      args:
                        - >-
                          aws s3 rm s3://test-s3-bucket-clen --recursive
                          --region us-east-1
                      command:
                        - sh
                        - '-c'
                      env:
                        - name: AWS_ACCESS_KEY_ID
                          valueFrom:
                            secretKeyRef:
                              key: access_key
                              name: aws-secret
                        - name: AWS_SECRET_ACCESS_KEY
                          valueFrom:
                            secretKeyRef:
                              key: secret_key
                              name: aws-secret
                      image: amazon/aws-cli
                    name: clear-s3
          operation: create
          parameters:
            - src:
                dependencyName: slack
                dataKey: body.message
              dest: spec.arguments.parameters.0.value
  template:
    serviceAccountName: operate-workflow-sa
status:
  conditions:
    - type: DependenciesProvided
      status: 'False'
      lastTransitionTime: '2023-04-20T22:13:08Z'
      reason: InvalidDependencies
      message: event dependency must define a name
    - type: Deployed
      status: Unknown
      lastTransitionTime: '2023-04-20T21:34:37Z'
    - type: TriggersProvided
      status: Unknown
      lastTransitionTime: '2023-04-20T21:34:37Z'

